version: '3.8'
services:
  postgres-account:
    image: postgres:15
    container_name: account_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: account_db
    ports:
      - "5432:5432"
    volumes:
      - ./account-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: always

  postgres-notification:
    image: postgres:15
    container_name: notification_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: notification_db
    ports:
      - "7432:5432"
    volumes:
      - ./notification-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: always

  postgres-transaction:
    image: postgres:15
    container_name: transaction_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: transaction_db
    ports:
      - "6432:5432"
    volumes:
      - ./transaction-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: always


  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper